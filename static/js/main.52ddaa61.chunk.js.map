{"version":3,"sources":["components/AnalyticChart.js","constant/index.js","components/StatCard.js","components/ListOfStat.js","components/Navbar.js","App.js","index.js"],"names":["AnalyticChart","useEffect","canvas","document","getElementById","getContext","window","myLine","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","options","maintainAspectRatio","responsive","title","text","display","fontSize","fontColor","legend","align","position","scales","xAxes","ticks","yAxes","callback","tick","index","array","gridLines","borderDash","borderDashOffset","color","zeroLineColor","className","id","report","cases","value","delta","valueColor","StatCard","stat","ListOfStat","map","Navbar","App","style","minHeight","ReactDOM","render","StrictMode"],"mappings":"kMAEe,SAASA,IA0EvB,OAzEAC,qBAAU,WACT,IAAMC,EAASC,SAASC,eAAe,SAASC,WAAW,MAE3DC,OAAOC,OAAS,IAAIC,IAAMN,EAAQ,CACjCO,KAAM,MACNC,KAAM,CACLC,OAAQ,CAAC,SAAU,SAAU,SAAU,SAAU,UACjDC,SAAU,CACT,CACCC,MAAO,QACPH,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBI,gBAAiB,UACjBC,YAAa,WAEd,CACCF,MAAO,SACPH,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBI,gBAAiB,UACjBC,YAAa,WAEd,CACCF,MAAO,YACPH,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBI,gBAAiB,UACjBC,YAAa,aAIhBC,QAAS,CACRC,qBAAqB,EACrBC,YAAY,EACZC,MAAO,CACNC,KAAM,gCACNC,SAAS,EACTC,SAAU,KACVC,UAAW,SAEZC,OAAQ,CACPC,MAAO,MACPC,SAAU,MACVf,OAAQ,CACPY,UAAW,UAGbI,OAAQ,CACPC,MAAO,CACN,CACCC,MAAO,CACNN,UAAW,WAIdO,MAAO,CACN,CACCD,MAAO,CACNN,UAAW,QACXQ,SAAU,SAAUC,EAAMC,EAAOC,GAChC,OAAOD,EAAQ,IAAM,EAAID,EAAO,KAGlCG,UAAW,CACVC,WAAY,CAAC,GACbC,iBAAkB,CAAC,IACnBC,MAAO,wBACPC,cAAe,iCAOnB,IAGF,qBAAKC,UAAU,sEAAf,SACC,wBAAQC,GAAG,QAAQD,UAAU,WC9EhC,IAAME,EAAS,CACdC,MAAO,CACN,CACC9B,MAAO,cACP+B,MAAO,MAER,CACC/B,MAAO,SACP+B,MAAO,KACPC,MAAO,IAER,CACChC,MAAO,QACP+B,MAAO,EACPC,MAAO,GAER,CACChC,MAAO,YACP+B,MAAO,IACPC,MAAO,MAKJC,EAAa,CAClB,kBACA,iBACA,eACA,iBC1Bc,SAASC,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,KAAMF,EAAc,EAAdA,WAChCjC,EAAwBmC,EAAxBnC,MAAO+B,EAAiBI,EAAjBJ,MAAOC,EAAUG,EAAVH,MACtB,OACC,qBAAKL,UAAU,6HAAf,SACC,gCACC,oBAAIA,UAAU,qBAAd,SAAoC3B,IACpC,sBAAK2B,UAAS,4BAAuBM,GAArC,UACC,oBAAIN,UAAU,sBAAd,SAAqCI,IACrC,oBAAIJ,UAAU,eAAd,SAA8BK,EAAQ,IAAMA,EAAQ,aCP1C,SAASI,IACvB,OACC,qBAAKT,UAAU,qDAAf,SACEE,EAAOC,MAAMO,KAAI,SAACF,EAAMf,GACxB,OACC,cAACc,EAAD,CAAUC,KAAMA,EAAkBF,WAAYA,EAAWb,IAA9BA,QCNjB,SAASkB,IACvB,OACC,sBAAKX,UAAU,wBAAf,UACC,oBAAIA,UAAU,iCAAd,0BACA,oBAAIA,UAAU,wBAAd,yCCFY,SAASY,IACvB,OACC,sBAAKZ,UAAU,4CAAf,UACC,cAACW,EAAD,IACA,sBACCX,UAAU,qEACVa,MAAO,CACNC,UAAW,QAHb,UAMC,cAACL,EAAD,IACA,cAACjD,EAAD,U,MCXJuD,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAACL,EAAD,MAEDjD,SAASC,eAAe,W","file":"static/js/main.52ddaa61.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Chart from 'chart.js';\r\nexport default function AnalyticChart() {\r\n\tuseEffect(() => {\r\n\t\tconst canvas = document.getElementById('chart').getContext('2d');\r\n\t\t// make api request\r\n\t\twindow.myLine = new Chart(canvas, {\r\n\t\t\ttype: 'bar',\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: ['Mar 22', 'Mar 23', 'Mar 24', 'Mar 25', 'Mar 26'],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Death',\r\n\t\t\t\t\t\tdata: [0, 9, 2, 0, 3],\r\n\t\t\t\t\t\tbackgroundColor: '#F87171',\r\n\t\t\t\t\t\tborderColor: '#F87171',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Active',\r\n\t\t\t\t\t\tdata: [4, 2, 1, 2, 2],\r\n\t\t\t\t\t\tbackgroundColor: '#6EE7B7',\r\n\t\t\t\t\t\tborderColor: '#6EE7B7',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Recovered',\r\n\t\t\t\t\t\tdata: [3, 4, 6, 0, 1],\r\n\t\t\t\t\t\tbackgroundColor: '#93C5FD',\r\n\t\t\t\t\t\tborderColor: '#93C5FD',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\toptions: {\r\n\t\t\t\tmaintainAspectRatio: false,\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'COVID-19 Statistics of Bhopal',\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\tfontSize: '20',\r\n\t\t\t\t\tfontColor: 'white',\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\talign: 'end',\r\n\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\tfontColor: 'white',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tscales: {\r\n\t\t\t\t\txAxes: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\tfontColor: 'white',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\tfontColor: 'white',\r\n\t\t\t\t\t\t\t\tcallback: function (tick, index, array) {\r\n\t\t\t\t\t\t\t\t\treturn index % 2 !== 0 ? tick : '';\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\t\tborderDash: [3],\r\n\t\t\t\t\t\t\t\tborderDashOffset: [10],\r\n\t\t\t\t\t\t\t\tcolor: 'rgba(255,255,255,0.3)',\r\n\t\t\t\t\t\t\t\tzeroLineColor: 'rgba(255,255,255,0.3)',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"w-11/12 xl:w-6/12 2xl:w-8/12 bg-gray-900 sm:ml-2 mt-10 xl:mt-0 h-96\">\r\n\t\t\t<canvas id=\"chart\" className=\"h-96\" />\r\n\t\t</div>\r\n\t);\r\n}\r\n","const report = {\r\n\tcases: [\r\n\t\t{\r\n\t\t\tlabel: 'Total Cases',\r\n\t\t\tvalue: 1220,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Active',\r\n\t\t\tvalue: 1100,\r\n\t\t\tdelta: 78,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Death',\r\n\t\t\tvalue: 4,\r\n\t\t\tdelta: 1,\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Recovered',\r\n\t\t\tvalue: 100,\r\n\t\t\tdelta: 20,\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst valueColor = [\r\n\t'text-yellow-300',\r\n\t'text-green-300',\r\n\t'text-red-400',\r\n\t'text-blue-300',\r\n];\r\n\r\nexport { valueColor, report };\r\n","import React from 'react';\r\n\r\nexport default function StatCard({ stat, valueColor }) {\r\n\tconst { label, value, delta } = stat;\r\n\treturn (\r\n\t\t<div className=\"h-28 sm:w-56 sm:h-48 w-full  bg-indigo-600 rounded flex items-center p-5 hover:tracking-wide transition-all cursor-pointer\">\r\n\t\t\t<div>\r\n\t\t\t\t<h3 className=\"text-white text-sm\">{label}</h3>\r\n\t\t\t\t<div className={`flex items-center ${valueColor}`}>\r\n\t\t\t\t\t<h1 className=\"text-3xl font-black\">{value}</h1>\r\n\t\t\t\t\t<h3 className=\"ml-2 text-sm\">{delta ? '+' + delta : ''}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { report, valueColor } from '../constant';\r\nimport StatCard from './StatCard';\r\nexport default function ListOfStat() {\r\n\treturn (\r\n\t\t<div className=\"w-11/12 sm:w-auto mt-10 grid  sm:grid-cols-2 gap-2\">\r\n\t\t\t{report.cases.map((stat, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<StatCard stat={stat} key={index} valueColor={valueColor[index]} />\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Navbar() {\r\n\treturn (\r\n\t\t<div className=\"w-11/12 mx-auto pt-10\">\r\n\t\t\t<h1 className=\"text-3xl font-black text-white\">COVID Bhopal</h1>\r\n\t\t\t<h3 className=\"text-gray-400 text-sm\">Last Updated 22 Mar 2021</h3>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import AnalyticChart from './components/AnalyticChart';\r\nimport ListOfStat from './components/ListOfStat';\r\nimport Navbar from './components/Navbar';\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<div className=\"font-inter bg-gray-900 min-h-screen pb-36\">\r\n\t\t\t<Navbar />\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"w-full flex items-center justify-center flex-col xl:flex-row mt-20\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tminHeight: '70vh',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<ListOfStat />\r\n\t\t\t\t<AnalyticChart />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './style/main.css';\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}